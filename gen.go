// Copyright 2018 Hajime Hoshi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +build ignore

package main

import (
	"bytes"
	"flag"
	"fmt"
	"io"
	"io/ioutil"
)

const head = `// Copyright 2018 Hajime Hoshi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// DO NOT EDIT - This file is generated by gen.go

package mplusbitmap
`

var output = flag.String("output", "image.go", "output file name")

func write(w io.Writer) error {
	bs, err := ioutil.ReadFile("mplus.png")
	if err != nil {
		return err
	}

	fmt.Fprintln(w, head)
	fmt.Fprint(w, "var imageBytes = []byte{")
	for i, b := range bs {
		fmt.Fprintf(w, "0x%02x,", b)
		if (i+1)%16 == 0 {
			fmt.Fprintln(w)
		}
	}
	fmt.Fprintln(w, "}")
	return nil
}

func main() {
	flag.Parse()

	buf := &bytes.Buffer{}
	if err := write(buf); err != nil {
		panic(err)
	}
	if err := ioutil.WriteFile(*output, buf.Bytes(), 0644); err != nil {
		panic(err)
	}
}
